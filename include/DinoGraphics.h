#pragma once

typedef struct {
    char width;
    char height;
    const unsigned char* data;
} Sprite;


enum ESprites : unsigned char {
    DINO_1, // default
    DINO_2, // eyes cosed
    DINO_3, // animation step 1
    DINO_4, // animation step 2
    DINO_5, // dead
    DINO_6, // crouch 1
    DINO_7, // crouch 2
    CACTUS_1,
    CACTUS_2,
    BIRD_1,
    BIRD_2,
};

/*
// For conversion, just input graphic as string 01110001110001
art2xbm = data => data.replace(/,? *0b/g, '')
                      .replace(/[^01\n]/g, '')
					  .split('\n')
					  .map(x => x.trim())
					  .map(x =>
					  	x.replace(/([01]{1,8})/g, '.$1')
					  	 .split('.')
					  	 .filter(x => x.length)
					  	 .map(x => x.split("").reverse().join(""))
					  )
					  .flat()
					  .map(x=>'0x' + ('00' + eval('0b'+x).toString(16)).slice(-2))
					  .join(', ')

xbm2art = (data, width) => data.map(x=>
                                    ('00000000' + x.toString(2)).slice(-8)
                                    .split("").reverse().join("")
                                )
                                .join('')
                                .replace(new RegExp('([01]{'+Math.ceil(width/8)*8+'})', 'g'), '$1\n')
*/

const PROGMEM unsigned char D_DINO_1[] = {
    0x00, 0xf8, 0x07, 0x00, 0xfc, 0x0f, 0x00, 0xec, 0x0f, 
    0x00, 0xfc, 0x0f, 0x00, 0xfc, 0x0f, 0x00, 0xfc, 0x0f, 
    0x00, 0x7c, 0x00, 0x00, 0xfc, 0x03, 0x01, 0x3e, 0x00, 
    0x81, 0x3f, 0x00, 0xc3, 0xff, 0x00, 0xe7, 0xbf, 0x00, 
    0xff, 0x3f, 0x00, 0xff, 0x3f, 0x00, 0xfe, 0x1f, 0x00, 
    0xfc, 0x1f, 0x00, 0xf8, 0x0f, 0x00, 0xf0, 0x07, 0x00, 
    0xe0, 0x06, 0x00, 0x60, 0x04, 0x00, 0x20, 0x04, 0x00, 
    0x60, 0x0c, 0x00
};

const PROGMEM unsigned char D_DINO_2[] = {
    0x00, 0xf8, 0x07, 0x00, 0xfc, 0x0f, 0x00, 0xfc, 0x0f, 
    0x00, 0xfc, 0x0f, 0x00, 0xfc, 0x0f, 0x00, 0xfc, 0x0f, 
    0x00, 0x7c, 0x00, 0x00, 0xfc, 0x03, 0x01, 0x3e, 0x00, 
    0x81, 0x3f, 0x00, 0xc3, 0xff, 0x00, 0xe7, 0xbf, 0x00, 
    0xff, 0x3f, 0x00, 0xff, 0x3f, 0x00, 0xfe, 0x1f, 0x00, 
    0xfc, 0x1f, 0x00, 0xf8, 0x0f, 0x00, 0xf0, 0x07, 0x00, 
    0xe0, 0x06, 0x00, 0x60, 0x04, 0x00, 0x20, 0x04, 0x00, 
    0x60, 0x0c, 0x00
};

const PROGMEM unsigned char D_DINO_3[] = {
    0x00, 0xf8, 0x07, 0x00, 0xfc, 0x0f, 0x00, 0xec, 0x0f, 
    0x00, 0xfc, 0x0f, 0x00, 0xfc, 0x0f, 0x00, 0xfc, 0x0f, 
    0x00, 0x7c, 0x00, 0x00, 0xfc, 0x03, 0x01, 0x3e, 0x00, 
    0x81, 0x3f, 0x00, 0xc3, 0xff, 0x00, 0xe7, 0xbf, 0x00, 
    0xff, 0x3f, 0x00, 0xff, 0x3f, 0x00, 0xfe, 0x1f, 0x00, 
    0xfc, 0x1f, 0x00, 0xf8, 0x0f, 0x00, 0xf0, 0x07, 0x00, 
    0xe0, 0x1c, 0x00, 0x60, 0x00, 0x00, 0x20, 0x00, 0x00, 
    0x60, 0x00, 0x00
};

const PROGMEM unsigned char D_DINO_4[] = {
    0x00, 0xf8, 0x07, 0x00, 0xfc, 0x0f, 0x00, 0xec, 0x0f, 
    0x00, 0xfc, 0x0f, 0x00, 0xfc, 0x0f, 0x00, 0xfc, 0x0f, 
    0x00, 0x7c, 0x00, 0x00, 0xfc, 0x03, 0x01, 0x3e, 0x00, 
    0x81, 0x3f, 0x00, 0xc3, 0xff, 0x00, 0xe7, 0xbf, 0x00, 
    0xff, 0x3f, 0x00, 0xff, 0x3f, 0x00, 0xfe, 0x1f, 0x00, 
    0xfc, 0x1f, 0x00, 0xf8, 0x0f, 0x00, 0xf0, 0x07, 0x00, 
    0x60, 0x06, 0x00, 0xc0, 0x04, 0x00, 0x00, 0x04, 0x00, 
    0x00, 0x0c, 0x00
};

const PROGMEM unsigned char D_DINO_5[] = {
    0x00, 0xf8, 0x07, 0x00, 0xfc, 0x0f, 0x00, 0x8c, 0x0f, 
    0x00, 0xac, 0x0f, 0x00, 0x8c, 0x0f, 0x00, 0xfc, 0x0f, 
    0x00, 0x7c, 0x00, 0x00, 0xfc, 0x03, 0x01, 0x3e, 0x00, 
    0x81, 0x3f, 0x00, 0xc3, 0xff, 0x00, 0xe7, 0xbf, 0x00, 
    0xff, 0x3f, 0x00, 0xff, 0x3f, 0x00, 0xfe, 0x1f, 0x00, 
    0xfc, 0x1f, 0x00, 0xf8, 0x0f, 0x00, 0xf0, 0x07, 0x00, 
    0xe0, 0x06, 0x00, 0x60, 0x04, 0x00, 0x20, 0x04, 0x00, 
    0x60, 0x0c, 0x00
};

const PROGMEM unsigned char D_DINO_6[] = {
    0x01, 0x00, 0xfc, 0x03, 0x87, 0x7f, 0xfe, 0x07, 0xff, 
    0xff, 0xf7, 0x07, 0xfe, 0xff, 0xff, 0x07, 0xfc, 0xff, 
    0xff, 0x07, 0xf8, 0xff, 0xff, 0x07, 0xf0, 0xff, 0x3f, 
    0x00, 0xe0, 0xff, 0xfc, 0x01, 0xc0, 0xff, 0x00, 0x00, 
    0xe0, 0x5c, 0x00, 0x00, 0x60, 0xc0, 0x00, 0x00, 0x20, 
    0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00
};

const PROGMEM unsigned char D_DINO_7[] = {
    0x01, 0x00, 0xfc, 0x03, 0x87, 0x7f, 0xfe, 0x07, 0xff, 
    0xff, 0xf7, 0x07, 0xfe, 0xff, 0xff, 0x07, 0xfc, 0xff, 
    0xff, 0x07, 0xf8, 0xff, 0xff, 0x07, 0xf0, 0xff, 0x3f, 
    0x00, 0xe0, 0xff, 0xfc, 0x01, 0xc0, 0xff, 0x00, 0x00, 
    0x40, 0x4e, 0x00, 0x00, 0xc0, 0xc6, 0x00, 0x00, 0x00, 
    0x02, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00
};

const PROGMEM unsigned char D_CACTUS_1[] = {
    0x60, 0x00, 0xf0, 0x00, 0xf0, 0x00, 0xf0, 0x00, 0xf0, 
    0x00, 0xf0, 0x00, 0xf2, 0x00, 0xf7, 0x04, 0xf7, 0x0e, 
    0xf7, 0x0e, 0xf7, 0x0e, 0xf7, 0x0e, 0xf7, 0x0e, 0xff, 
    0x0e, 0xfe, 0x07, 0xfc, 0x03, 0xf0, 0x00, 0xf0, 0x00, 
    0xf0, 0x00, 0xf0, 0x00, 0xf0, 0x00, 0xf0, 0x00, 0xf0, 
    0x00
};

const PROGMEM unsigned char D_CACTUS_2[] = {
    0x60, 0x00, 0xf0, 0x00, 0xf0, 0x00, 0xf0, 0x00, 0xf2, 
    0x00, 0xf7, 0x04, 0xf7, 0x0e, 0xf7, 0x0e, 0xf7, 0x0e, 
    0xff, 0x0e, 0xfe, 0x07, 0xfc, 0x03, 0xf0, 0x00, 0xf0, 
    0x00, 0xf0, 0x00, 0xf0, 0x00, 0xf0, 0x00
};

const PROGMEM unsigned char D_CACTUS_3[] = {
    0x0c, 0x0d, 0x2f, 0x3e, 0x1c, 0x0c, 0x0c
};

const PROGMEM unsigned char D_BIRD_1[] = {
    0x80, 0x00, 0x00, 0x80, 0x01, 0x00, 0x80, 0x03, 0x00, 
    0x30, 0x07, 0x00, 0x38, 0x0f, 0x00, 0x7c, 0x1f, 0x00, 
    0x7e, 0x3f, 0x00, 0xff, 0x3f, 0x00, 0xc0, 0x7f, 0x00, 
    0x80, 0xff, 0x1f, 0x00, 0xff, 0x03, 0x00, 0xfe, 0x0f, 
    0x00, 0xfc, 0x01
};

const PROGMEM unsigned char D_BIRD_2[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x30, 0x00, 0x00, 0x38, 0x00, 0x00, 0x7c, 0x00, 0x00, 
    0x7e, 0x00, 0x00, 0xff, 0x3f, 0x00, 0xc0, 0x7f, 0x00, 
    0x80, 0xff, 0x1f, 0x00, 0xff, 0x03, 0x00, 0xff, 0x0f, 
    0x00, 0xff, 0x01, 0x00, 0x0f, 0x00, 0x00, 0x07, 0x00, 
    0x00, 0x03, 0x00, 0x00, 0x03, 0x00, 0x00, 0x01, 0x00
};

const PROGMEM Sprite sprites[] = {
    {20, 22, D_DINO_1},
    {20, 22, D_DINO_2},
    {20, 22, D_DINO_3},
    {20, 22, D_DINO_4},
    {20, 22, D_DINO_5},
    {27, 13, D_DINO_6},
    {27, 13, D_DINO_7},
    {12, 23, D_CACTUS_1},
    {12, 17, D_CACTUS_2},
    { 6,  5, D_CACTUS_3},
    {21, 13, D_BIRD_1},
    {21, 18, D_BIRD_2}, // has some room above it's head so it can be drawn in the same place
};